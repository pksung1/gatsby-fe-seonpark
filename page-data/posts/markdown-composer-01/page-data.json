{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/posts/markdown-composer-01/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Devseon Blogs"}},"markdownRemark":{"id":"c4593795-5fa4-5a79-8ed2-97436b9d9a9c","excerpt":"마크다운으로 블로그 글을 관리하는 툴을 만들고싶다. velog, medium, notion…","html":"<h2>마크다운으로 블로그 글을 관리하는 툴을 만들고싶다.</h2>\n<p>velog, medium, notion 아니면 깃허브에 블로그 글을 쓰고있는데 이 글을 한 툴에서 통합으로 관리하고 싶었다.</p>\n<p>가장 큰 문제는 이미지라고 생각한다.</p>\n<p>이미지는 다른 곳에 업로드를 할 경우 다른 블로그에 글을 옮길떄 이미지를 다시 관리해줘야 한다는거?</p>\n<p>그 문제를 해결하기 위해 이 markdown-composer를 기획했다.</p>\n<h2>어떻게 만들어볼까?</h2>\n<p>이 블로그는 개츠비로 만들어져있고, 파일을 내로컬에서 관리하기 때문에 로컬 프로그램을 만들어야 겠다고 생각헀다.</p>\n<p>C#을 공부하는것보단 이번 기회에 electron으로 로컬파일을 관리하며 블로그에 글을 업로드할수 있는 방식으로 해볼 계획을 세웠다.</p>\n<p>이미지 업로드는 어떻게 해야할까?</p>\n<p>이미지는 구글 드라이브가 가장 편해보여서 일단 구글드라이브 API를 활용해보기로 했다.</p>\n<p>가능하면 최대한 다른 편한 블로그에서 지원하는 기능을 모두 지원해보고싶다.</p>\n<ul>\n<li>electron</li>\n<li>google drive api</li>\n</ul>\n<p>지원할 기능은 아래와 같다.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 양옆을 스플릿뷰로 왼쪽은 에디터, 오른쪽은 마크다운을 보여주는 페이지</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 이미지를 ctrl + v, 또는 드래그앤 드롭을 한다면 구글드라이브에 이미지를 올리고 마크다운 자동생성</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 저장하기 클릭시 md 파일로 저장</li>\n</ul>\n<p>일단 위의기능 먼저 구현하고 다음 기능을 생각해보자</p>\n<h3>electron 구성하기</h3>\n<p>electron 페이지 그대로 구성하게 되면 정말 날것의 일렉트론 환경을 사용하게 된다.</p>\n<p><a href=\"https://www.electronforge.io/templates/typescript-+-webpack-template\">https://www.electronforge.io/templates/typescript-+-webpack-template</a></p>\n<p>electorn-forge에서 타입스크립트와 웹펙이 적용된 템플릿을 주기 떄문에 처음 시작할때는 이걸로 구성하는걸 추천한다.</p>\n<p>일단 여기까지만 구성하고 다음엔 마크다운 파싱을 js로 만들어 볼것이다.</p>","frontmatter":{"title":"마크다운 블로그관리 프로젝트 (1)","date":"January 03, 2022","description":"마크다운으로 블로그 글을 관리하는 툴을 만들고싶다."}},"previous":{"fields":{"slug":"/first-gatsby-post/"},"frontmatter":{"title":"2021년을 정리하며"}},"next":null},"pageContext":{"id":"c4593795-5fa4-5a79-8ed2-97436b9d9a9c","previousPostId":"08b4233c-e1d8-5ef0-aaa5-afe7c81b89e0","nextPostId":null}},
    "staticQueryHashes": ["2841359383","3257411868"]}